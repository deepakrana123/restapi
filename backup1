var express=require('express')
var app=express();
var port=process.env.PORT||7600; // enviornment port picking the data from the server

var bodyparser=require('body-parser');// for making post api

var mongo=require('mongodb')
var Mongoclient=mongo.MongoClient // a method to connect to mo
var mongourl="mongodb+srv://rdev69146:devendra0305@cluster0.5gufq.mongodb.net/<edureka>?retryWrites=true&w=majority"
var cors=require('cors');
var db;


app.use(cors());
app.use(bodyparser.urlencoded({extented:true}));
app.use(bodyparser.json());


app.get('/health',(req,res)=>{      /// routes for help
        res.send("Api working correctly")
})
// list of city
app.get('/location',(req,res)=>{   // routes for loccation
    
    db.collection('city').find({}).toArray((err,result)=>{
        if(err) throw err;
        res.send(result)
    })   // find without condition
    
})

app.get('/',(req,res)=>{
    res.send(`<a href="http://localhost:7600/location" target="_blank">City</a>
     <br/> <a href="http://localhost:7600/mealtype" target="_blank">Mealtype</a>
      <br/> <a href="http://localhost:7600/cusine" target="_blank">Cuisine</a>
       <br/> <a href="http://localhost:7600/restaurant" target="_blank">Restaurants</a> <br/> <a href="http://localhost:7800/orders" target="_blank">Orders</a>`)
})

// list of mealtype
app.get('/mealtype',(req,res)=>{
    db.collection('mealtype').find({}).toArray((err,result)=>{
           if(err) throw err;
           res.send(result)
    })
}) 
// list for cuisine
app.get('/cusine',(req,res)=>{
    db.collection('cusine').find({}).toArray((err,result)=>{
          if(err) throw err;
          res.send(result)
    })
})


    

// for restruant
app.get('/restaurant',(req,res)=>{
     
    var query={};
    if(req.query.city&& req.query.mealtype){
        query={city:req.query.city ,"type.mealtype":req.query.mealtype}
    }
   else if(req.query.city){
        query={city:req.query.city}
        }
    else if(req.query.mealtype){
          query={"type.mealtype":req.query.mealtype}
        }

 db.collection('restaurant').find({query}).toArray((err,result)=>{
        if(err) throw err;
        res.send(result)
    })
})


app.get('/restaurantlist:/mealtype',(req,res)=>{
    var query={};
    if(req.query.mealtype && req.query.cuisine){
        query={'type.mealtype':req.params.id,'Cuisine.cuisine':res.query.cuisine}

    }
    else if(req.query.city){
        query={'type.mealtype':req.params.id,'city':req.query.city}
    }
    else{
        query={"type.mealtype":req.params.mealtype}
    }
    db.collection('restaurant').find(query).toArray((err,result)=>{
        if(err) throw err;
        res.send(result)
    })
})



//restruantid
app.get('restaurantdetils/:id',(req,res)=>{
    var query={_id:req.params.id}
    db.collection('restaurant').find(query).toArray(err,result=>{
       res.send(result)
    })
})
// for order
app.get('/order',(req,res)=>{
    db.collection('orders').find({}).toArray((err,result)=>{
        if(err) throw err;
        res.send(result)
    })
})
// for placeholder
app.post('/placeholder',(req,res)=>{
    console.log(req.body);
    db.collection('orders').insert(req.body,(err,result)=>{
        if(err) throw err
        res.send('posted')
    })
})
// not require in project
// delete order
app.delete('/deleteorders',(req,res)=>{
    var condition={_id:req.body.id};
    db.collection('orders').remove({condition},(err,result)=>{
        if(err) throw err
        res.send('delete order')
    })

})
//update order

app.get('/restaurant/:cost',(req,res)=>{
    var query={};
    if(req.query.lcost &&req.query.gcost){
query={"type.mealtype":req.params.mealtype,cost:{$lt:Number(req.query.hcost),$ht:Number(req.query.lcost)}}
    }
})





// connecting with mongodb
Mongoclient.connect(mongourl,(err,connection)=>{    /// url to connect
    if(err) throw err
    db=connection.db('edureka')// which db name you want to connet
    app.listen(port,(err)=>{
        if(err)throw err
        console.log(`Server is running in ${port}`);
    })
})
